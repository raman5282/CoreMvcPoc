@model CoreMvcPoc.Entities.PagedList<CoreMvcPoc.Entities.Book>
@{
    ViewBag.Title = "Books";   
}
<form asp-action="Index" method="get">
    <p>
        Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" asp-route-currentFilter="@ViewData["CurrentFilter"]" value="Search" class="btn btn-default" />         
    </p>
</form>
@Html.ActionLink("Add New", "AddNew")
<table class="table">
    <tr>        
        <th>
            <a asp-action="Index" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["NameSortParm"]">Name</a>
        </th>
        <th>
            <a asp-action="Index" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["AuthorSortParm"]">Author</a>
        </th>
        <th>
            <a asp-action="Index" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["PriceSortParm"]">Price</a>
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model.List) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Author)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id  }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class="postLink"})
        </td>
    </tr>
}

</table>
@if(@Model.TotalPages > 1){
    
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

    <div  style="display:flex; flex-direction: row; justify-content: flex-start; align-items: center">
    <a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    asp-route-page="@(Model.PageNumber - 1)"  
    class="btn btn-default @prevDisabled">Previous
    </a>
    &nbsp;
    <table id="table_paging" >
        @for(var i=1; i<= @Model.TotalPages; i++)
            {
            <td>
            <a asp-action="Index"
            asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-currentFilter="@ViewData["CurrentFilter"]"
    asp-route-page="@i"
    >
                    @i</a>
            </td>
            }
        </table>
    &nbsp;
    <a  asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    asp-route-page="@(Model.PageNumber + 1)"   
        class="btn btn-default @nextDisabled">Next
    </a>
    </div>
}
@section Scripts
{
    <script type="text/javascript">
        $(function(){
            $("a.postLink").click(function(e){
            e.preventDefault();
              var confirmationmessage = "Are you sure you want to delete this?";
              if(confirm(confirmationmessage))
              {
                $.post($(this).attr("href"),function(data){   
                    if(data.success)
                    {
                         window.location.reload();
                         alert(data.message);
                    }
                    else if(data.message == "unauthorized")
                    {
                        window.location.href = '/User/Logout';
                    }
                    else
                    {
                        alert(data.message);
                    }
                    
                });
              }
              else
              {
                return false;
              }
            });    
        });    
    </script>
}